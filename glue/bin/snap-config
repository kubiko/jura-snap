#!/bin/bash

# read openhab config
CONFIG=${SNAP}/bin/configuration.json

process_line() {
  # each line starts with key name and end variable
  local key=$1
  shift
  # check if we have valid json in first place
  if ! jq -e . >/dev/null 2>&1 <<<"$@"; then
    type -p handle_key_value && handle_key_value ${key} $@
    return
  fi
  local env=$(echo $@ | jq -r '.env')
  local file=$(echo $@ | jq -r '.file')
  local conf=$(echo $@ | jq -r '.config')
  local default=$(echo $@ | jq -r '.default')
  local value=$(snapctl get ${key})
  local description=$(echo $@ | jq -r '.description')
  # if we have env, no need to traverse further
  if [ "${env}" != "null" ]; then
      type -p apply_config && apply_config "${key}" "${env}" "${value}" "${default}" "${description}"
  elif [ "${file}" != "null" ]; then
      type -p apply_settings && apply_settings "${key}" "${file}" "${conf}" "${value}" "${default}" "${description}"
  else
      type -p processing_top_key_start && processing_top_key_start ${key}
      while read line
      do
          process_line ${key}.${line}
      done < <(echo $@ | jq -r 'keys[] as $k | "\($k) \(.[$k] )"')
      type -p processing_top_key_end && processing_top_key_end ${key}
  fi
}


read_snap_config() {
    while read line
    do
        process_line $line
    done < <(jq -r 'keys[] as $k | "\($k) \(.[$k] )"' ${CONFIG})
}

